name: Haskell CI

on:
  push:
    branches: [ master ]
    tags:
      - '*'
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-haskell@v1
      with:
        enable-stack: true
        ghc-version: '8.8.3'
        stack-version: 'latest'

    - name: Cache
      uses: actions/cache@v1
      env:
        cache-name: cache-cabal
      with:
        path: ~/.cabal
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/*.cabal') }}-${{ hashFiles('**/cabal.project') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-


    - name: Build
      run: stack build

    - name: Run tests
      run: stack test

    - name: Install ust2dsa
      run: stack install

    - name: Upload executable as an artifact
      uses: actions/upload-artifact@v2
      with:
        name: ust2dsa
        path: ~/.local/bin/ust2dsa

    - name: Create Release
      id: create_stable_release
      uses: actions/create-release@latest
      if: startsWith(github.ref, 'refs/tags/v')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Stable Release Artifact
      id: upload_stable_release_asset
      uses: actions/upload-release-asset@v1
      if: steps.create_stable_release.outcome == 'success'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_stable_release.outputs.upload_url }}
        asset_path: ~/.local/bin/ust2dsa
        asset_name: ust2dsa
        asset_content_type: application/x-executable
